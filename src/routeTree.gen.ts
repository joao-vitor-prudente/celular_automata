/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CreateProviderRouteRouteImport } from './routes/_create-provider/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SimulateSlugRouteImport } from './routes/simulate/$slug'
import { Route as CreateProviderCreateRouteRouteImport } from './routes/_create-provider/create/route'

const CreateProviderRouteRoute = CreateProviderRouteRouteImport.update({
  id: '/_create-provider',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SimulateSlugRoute = SimulateSlugRouteImport.update({
  id: '/simulate/$slug',
  path: '/simulate/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateProviderCreateRouteRoute =
  CreateProviderCreateRouteRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => CreateProviderRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateProviderCreateRouteRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateProviderCreateRouteRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_create-provider': typeof CreateProviderRouteRouteWithChildren
  '/_create-provider/create': typeof CreateProviderCreateRouteRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/create' | '/simulate/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/create' | '/simulate/$slug'
  id:
    | '__root__'
    | '/'
    | '/_create-provider'
    | '/_create-provider/create'
    | '/simulate/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateProviderRouteRoute: typeof CreateProviderRouteRouteWithChildren
  SimulateSlugRoute: typeof SimulateSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_create-provider': {
      id: '/_create-provider'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CreateProviderRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simulate/$slug': {
      id: '/simulate/$slug'
      path: '/simulate/$slug'
      fullPath: '/simulate/$slug'
      preLoaderRoute: typeof SimulateSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_create-provider/create': {
      id: '/_create-provider/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateProviderCreateRouteRouteImport
      parentRoute: typeof CreateProviderRouteRoute
    }
  }
}

interface CreateProviderRouteRouteChildren {
  CreateProviderCreateRouteRoute: typeof CreateProviderCreateRouteRoute
}

const CreateProviderRouteRouteChildren: CreateProviderRouteRouteChildren = {
  CreateProviderCreateRouteRoute: CreateProviderCreateRouteRoute,
}

const CreateProviderRouteRouteWithChildren =
  CreateProviderRouteRoute._addFileChildren(CreateProviderRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateProviderRouteRoute: CreateProviderRouteRouteWithChildren,
  SimulateSlugRoute: SimulateSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
