/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CreateRouteRouteImport } from './routes/create/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SimulateAutomatonIdRouteImport } from './routes/simulate/$automatonId'
import { Route as CreateTransitionsStepRouteImport } from './routes/create/transitions-step'
import { Route as CreateStatesStepRouteImport } from './routes/create/states-step'
import { Route as CreateAutomatonStepRouteImport } from './routes/create/automaton-step'

const CreateRouteRoute = CreateRouteRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SimulateAutomatonIdRoute = SimulateAutomatonIdRouteImport.update({
  id: '/simulate/$automatonId',
  path: '/simulate/$automatonId',
  getParentRoute: () => rootRouteImport,
} as any)
const CreateTransitionsStepRoute = CreateTransitionsStepRouteImport.update({
  id: '/transitions-step',
  path: '/transitions-step',
  getParentRoute: () => CreateRouteRoute,
} as any)
const CreateStatesStepRoute = CreateStatesStepRouteImport.update({
  id: '/states-step',
  path: '/states-step',
  getParentRoute: () => CreateRouteRoute,
} as any)
const CreateAutomatonStepRoute = CreateAutomatonStepRouteImport.update({
  id: '/automaton-step',
  path: '/automaton-step',
  getParentRoute: () => CreateRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRouteRouteWithChildren
  '/create/automaton-step': typeof CreateAutomatonStepRoute
  '/create/states-step': typeof CreateStatesStepRoute
  '/create/transitions-step': typeof CreateTransitionsStepRoute
  '/simulate/$automatonId': typeof SimulateAutomatonIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRouteRouteWithChildren
  '/create/automaton-step': typeof CreateAutomatonStepRoute
  '/create/states-step': typeof CreateStatesStepRoute
  '/create/transitions-step': typeof CreateTransitionsStepRoute
  '/simulate/$automatonId': typeof SimulateAutomatonIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/create': typeof CreateRouteRouteWithChildren
  '/create/automaton-step': typeof CreateAutomatonStepRoute
  '/create/states-step': typeof CreateStatesStepRoute
  '/create/transitions-step': typeof CreateTransitionsStepRoute
  '/simulate/$automatonId': typeof SimulateAutomatonIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create'
    | '/create/automaton-step'
    | '/create/states-step'
    | '/create/transitions-step'
    | '/simulate/$automatonId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create'
    | '/create/automaton-step'
    | '/create/states-step'
    | '/create/transitions-step'
    | '/simulate/$automatonId'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/create/automaton-step'
    | '/create/states-step'
    | '/create/transitions-step'
    | '/simulate/$automatonId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRouteRoute: typeof CreateRouteRouteWithChildren
  SimulateAutomatonIdRoute: typeof SimulateAutomatonIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simulate/$automatonId': {
      id: '/simulate/$automatonId'
      path: '/simulate/$automatonId'
      fullPath: '/simulate/$automatonId'
      preLoaderRoute: typeof SimulateAutomatonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/create/transitions-step': {
      id: '/create/transitions-step'
      path: '/transitions-step'
      fullPath: '/create/transitions-step'
      preLoaderRoute: typeof CreateTransitionsStepRouteImport
      parentRoute: typeof CreateRouteRoute
    }
    '/create/states-step': {
      id: '/create/states-step'
      path: '/states-step'
      fullPath: '/create/states-step'
      preLoaderRoute: typeof CreateStatesStepRouteImport
      parentRoute: typeof CreateRouteRoute
    }
    '/create/automaton-step': {
      id: '/create/automaton-step'
      path: '/automaton-step'
      fullPath: '/create/automaton-step'
      preLoaderRoute: typeof CreateAutomatonStepRouteImport
      parentRoute: typeof CreateRouteRoute
    }
  }
}

interface CreateRouteRouteChildren {
  CreateAutomatonStepRoute: typeof CreateAutomatonStepRoute
  CreateStatesStepRoute: typeof CreateStatesStepRoute
  CreateTransitionsStepRoute: typeof CreateTransitionsStepRoute
}

const CreateRouteRouteChildren: CreateRouteRouteChildren = {
  CreateAutomatonStepRoute: CreateAutomatonStepRoute,
  CreateStatesStepRoute: CreateStatesStepRoute,
  CreateTransitionsStepRoute: CreateTransitionsStepRoute,
}

const CreateRouteRouteWithChildren = CreateRouteRoute._addFileChildren(
  CreateRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRouteRoute: CreateRouteRouteWithChildren,
  SimulateAutomatonIdRoute: SimulateAutomatonIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
