/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AutomatonFormProviderRouteRouteImport } from './routes/_automaton-form-provider/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SimulateSlugRouteImport } from './routes/simulate/$slug'
import { Route as AutomatonFormProviderEditRouteImport } from './routes/_automaton-form-provider/edit'
import { Route as AutomatonFormProviderCreateRouteImport } from './routes/_automaton-form-provider/create'

const AutomatonFormProviderRouteRoute =
  AutomatonFormProviderRouteRouteImport.update({
    id: '/_automaton-form-provider',
    getParentRoute: () => rootRouteImport,
  } as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SimulateSlugRoute = SimulateSlugRouteImport.update({
  id: '/simulate/$slug',
  path: '/simulate/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const AutomatonFormProviderEditRoute =
  AutomatonFormProviderEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => AutomatonFormProviderRouteRoute,
  } as any)
const AutomatonFormProviderCreateRoute =
  AutomatonFormProviderCreateRouteImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AutomatonFormProviderRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof AutomatonFormProviderCreateRoute
  '/edit': typeof AutomatonFormProviderEditRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof AutomatonFormProviderCreateRoute
  '/edit': typeof AutomatonFormProviderEditRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_automaton-form-provider': typeof AutomatonFormProviderRouteRouteWithChildren
  '/_automaton-form-provider/create': typeof AutomatonFormProviderCreateRoute
  '/_automaton-form-provider/edit': typeof AutomatonFormProviderEditRoute
  '/simulate/$slug': typeof SimulateSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/create' | '/edit' | '/simulate/$slug'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/create' | '/edit' | '/simulate/$slug'
  id:
    | '__root__'
    | '/'
    | '/_automaton-form-provider'
    | '/_automaton-form-provider/create'
    | '/_automaton-form-provider/edit'
    | '/simulate/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AutomatonFormProviderRouteRoute: typeof AutomatonFormProviderRouteRouteWithChildren
  SimulateSlugRoute: typeof SimulateSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_automaton-form-provider': {
      id: '/_automaton-form-provider'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AutomatonFormProviderRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/simulate/$slug': {
      id: '/simulate/$slug'
      path: '/simulate/$slug'
      fullPath: '/simulate/$slug'
      preLoaderRoute: typeof SimulateSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_automaton-form-provider/edit': {
      id: '/_automaton-form-provider/edit'
      path: '/edit'
      fullPath: '/edit'
      preLoaderRoute: typeof AutomatonFormProviderEditRouteImport
      parentRoute: typeof AutomatonFormProviderRouteRoute
    }
    '/_automaton-form-provider/create': {
      id: '/_automaton-form-provider/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof AutomatonFormProviderCreateRouteImport
      parentRoute: typeof AutomatonFormProviderRouteRoute
    }
  }
}

interface AutomatonFormProviderRouteRouteChildren {
  AutomatonFormProviderCreateRoute: typeof AutomatonFormProviderCreateRoute
  AutomatonFormProviderEditRoute: typeof AutomatonFormProviderEditRoute
}

const AutomatonFormProviderRouteRouteChildren: AutomatonFormProviderRouteRouteChildren =
  {
    AutomatonFormProviderCreateRoute: AutomatonFormProviderCreateRoute,
    AutomatonFormProviderEditRoute: AutomatonFormProviderEditRoute,
  }

const AutomatonFormProviderRouteRouteWithChildren =
  AutomatonFormProviderRouteRoute._addFileChildren(
    AutomatonFormProviderRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AutomatonFormProviderRouteRoute: AutomatonFormProviderRouteRouteWithChildren,
  SimulateSlugRoute: SimulateSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
